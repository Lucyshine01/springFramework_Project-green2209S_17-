<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 데이터베이스 연동을 위한 환경설정처리(JDBC 설정) -->
		
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<!-- ?** : 매개변수넣기 --> <!-- allowMultiQueries=true : 매퍼에서 하나의 명령으로 여러개의 쿼리사용가능(insert문 등등) -->
		<!-- zeroDateTimeBehavior=convertToNull : datetime 형식 null값 허용(0000-00-00 형식을 null로 처리) -->
		<!-- &amp; : Entity Code(HTML 코드) 제어억제 코드, must end with the ';' delimiter 에러 시 &amp;로 교체 -->
		<property name="url" value="jdbc:mysql://221.160.158.209:3306/green2209_17?"/>
		<property name="username" value="root"/>
		<property name="password" value="1234"/>
		<!-- <property name="url" value="jdbc:mysql://localhost:3306/green2209_17?allowMultiQueries=true"/> -->
		<!-- <property name="username" value="root"/> -->
		<!-- <property name="password" value="1234"/> -->
	</bean>
	
	
	<!-- MYSQL DBCP(Connection Pool) - JDBC 패키지에서 DBCP 패키지로 클래스명만 바꾸면 설정완료 -->
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/javaworks"/>
		<property name="username" value="root" />
		<property name="password" value="1234" />
		<property name="initialSize" value="5" /> 초기 pool 사이즈 
		<property name="maxActive" value="20" /> 최대 pool 사이즈 
		<property name="validationQuery" value="select 1" /> 커넥션 유효성 검사 쿼리
		<property name="testWhileIdle" value="true" /> 커넥션이 놀고 있을때만 검사처리
		<property name="timeBetweenEvictionRunsMillis" value="60000" /> 60초에 한번씩 처리 - 밀리/초
	</bean> -->
	
	<!-- MyBatis Spring 연동(모듈설정) - mapper정보설정(MyBatis 설정) -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- mapperLocations : 매퍼의 저장위치 지정 , classpath : 자바의 resources위치 -->
		<property name="mapperLocations" value="classpath:/**/*Mapper.xml"/>
    <property name="configLocation" value="classpath:/mappers/mybatisConfig.xml"></property>
	</bean>
	
	<!-- mapper정보설정후 Template처리를 위한 설정 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<!-- 생성자를 통한 값넣기 -->
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 가공처리된 매퍼의 정보를 주입하기위한 DAO객체의 위치를 설정 -->
	<mybatis-spring:scan base-package="com.spring.green2209S_17.dao"/>
	
	<!-- 트랜잭션 사용을 위한 bean 설정 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" /> <!-- JDBC 설정값 -->
	</bean>
	<!-- 트랜잭션이 필요한 상황에서 어노테이션을 이용하여 사용하고자 할때 아래 한줄 추가 -->
	<!-- Namespaces - tx 체크 -->
	<tx:annotation-driven/>
	
	<!-- 메일서비스(SMTP)에 필요한 환경설정(gmail.com) -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<!-- <property name="username" value="jaykaybaek@gmail.com" />
		<property name="password" value="iyvvtmhewtlkkezl" /> -->
		<property name="username" value="saasdfgh03@gmail.com" />
		<property name="password" value="mmydhxwasufnzvfd" />
		<!-- 자바환경의 프로퍼티스를 맞춘다 -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
				<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
			</props>
		</property>
	</bean>
	
</beans>
