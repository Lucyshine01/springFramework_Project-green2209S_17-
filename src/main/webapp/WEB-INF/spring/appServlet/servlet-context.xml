<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/font/**" location="/resources/font/" />
	<resources mapping="/images/**" location="/resources/images/" />
	<resources mapping="/board/**" location="/resources/board/" />
	<resources mapping="/pds/**" location="/resources/pds/" />
	<resources mapping="/viewPage/**" location="/resources/viewPage/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.spring.green2209S_17" />
	
	<!-- 스프링 시큐리티 암호화 사용 -->
	<!-- BCryptPasswordEncoder 객체를 위한 bean 등록 -->
	<beans:bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<!-- 파일업로드에 필요한 라이브러리를 Bean으로 등록(업로드 최대용량 20MByte) -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="104857600" /> <!-- 파일 최대용량 -->
		<beans:property name="defaultEncoding" value="utf-8" /> <!-- 파일 인코딩처리 -->
	</beans:bean>
	
	<!-- 인터셉터 지정 -->
	<beans:bean id="firstInterceptor" class="com.spring.green2209S_17.interceptor.FirstInterceptor" />
	<beans:bean id="guestInterceptor" class="com.spring.green2209S_17.interceptor.GuestInterceptor" />
	<beans:bean id="adminInterceptor" class="com.spring.green2209S_17.interceptor.AdminInterceptor" />
	<beans:bean id="userInterceptor" class="com.spring.green2209S_17.interceptor.UserInterceptor" />
	<beans:bean id="companyInterceptor" class="com.spring.green2209S_17.interceptor.CompanyInterceptor" />
	<interceptors>

		<interceptor>
			<mapping path="/admin/**"/>
			<beans:ref bean="adminInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/member/**"/>
			<mapping path="/chat/**"/>
			<mapping path="/create/cpCreate"/>
			<mapping path="/create/createCompanyData"/>
			<mapping path="/create/saveCpImg"/>
			<exclude-mapping path="/member/login"/>
			<exclude-mapping path="/member/companyList"/>
			<exclude-mapping path="/member/companyInfoView"/>
			<beans:ref bean="userInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/member/companyInfo"/>
			<mapping path="/member/inputCPImg"/>
			<mapping path="/member/cpIntroImgDelete"/>
			<beans:ref bean="companyInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/create/**"/>
			<mapping path="/member/login"/>
			<exclude-mapping path="/create/cpCreate"/>
			<exclude-mapping path="/create/createCompanyData"/>
			<exclude-mapping path="/create/saveCpImg"/>
			<beans:ref bean="guestInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/**"/>
			<mapping path="/**/**"/>
			<exclude-mapping path="/error/**"/>
			<beans:ref bean="firstInterceptor"/>
		</interceptor>
	
	</interceptors>
	
	<!-- 트랜잭션을 어노테이션으로 처리하기위해 참조하는 클래스를 등록한다. -->
	<!-- Namespaces - tx 체크 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- StompSocket : 실시간 1대1 채팅방 -->
	<!-- chatController : 실시간 알림 -->
	<beans:bean id="realTimeController" class="com.spring.green2209S_17.webSocket.RealTimeController" />
	<websocket:handlers>
		<websocket:mapping handler="realTimeController" path="/realNotice"/>
		<!-- 웹소켓 인터셉터 생성 : 리퀘스트 파라미터,세션아이디 값 등등 -->
		<websocket:handshake-interceptors>
        <beans:bean class="com.spring.green2209S_17.webSocket.HandshakeInterceptor" />
    </websocket:handshake-interceptors>
		<websocket:sockjs/> <!-- 웹소켓을 sockjs로 사용 선언 -->
	</websocket:handlers>
	
</beans:beans>
